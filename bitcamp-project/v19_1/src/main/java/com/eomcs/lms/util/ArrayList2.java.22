package com.eomcs.lms.util;

import java.util.Arrays;

public class ArrayList2<E> {

  private static final int DEFAULT_CAPACITY = 100;
  Object[] elementData;
  int size;

  public ArrayList2() {

    this.elementData = new Object[DEFAULT_CAPACITY];
  }

  public ArrayList2(int initialCapacity) {
    if (initialCapacity < DEFAULT_CAPACITY) {
      this.elementData = new Object[DEFAULT_CAPACITY];
    } else {
      this.elementData = new Object[DEFAULT_CAPACITY];
    }

    this.elementData = new Object[initialCapacity];
  }

  public void add(E e) {
    if (this.size == this.elementData.length) {
      int oldSize = this.elementData.length;
      int newSize = oldSize + (oldSize >> 1);
      Object[] newArr = new Object[newSize];

      this.elementData = Arrays.copyOf(this.elementData, newSize);

      /*
      for (int i = 0; i < this.size; i++) {
        newArr[i] = this.elementData[i];
      }
     this.elementData = newArr;
       */
    }
    this.elementData[this.size++] = e; // e를 1개선언시 1개가늘어 2개가 된다.
  }

  @SuppressWarnings("unchecked")
  public E get(int index) {
    if (index < 0 || index >= this.size ) {
      return null;
    }
    return (E) this.elementData[index];
  }

  @SuppressWarnings("unchecked")
  public E set(int index, Object e) {
    if (index < 0 || index >= this.size ) {
      return null;
    }
    E oldValue = (E) this.elementData[index];
    this.elementData[index] = e;
    return oldValue;
  }

  @SuppressWarnings("unchecked")
  public E remove(int index) {
    if (index < 0 || index >= this.size ) {
      return null;
    }
    
    E oldValue = (E) this.elementData[index];
    
    System.arraycopy(this.elementData, index + 1, 
        this.elementData, index, this.size - (index + 1));
    // 원래 배열의 값을 -1만큼  원래 배열의 삭제 한 값의 위치부터 넣어라
    
    /*for (int i = index + 1; i < this.size; i++) {
      this.elementData[i - 1] = this.elementData[i];
    }
    */
    this.size--;
    return oldValue;
  }
  
  public int size() {
    return this.size;
  }
  
  @SuppressWarnings("unchecked")
  public E[] toArray() {
   return (E[]) Arrays.copyOf(this.elementData, this.size);
   //size만큼의 배열을 만들어소 elementData로 옮긴다.
    
    /*Object[] arr = new Object[this.size];
   for (int i = 0; i < this.size; i++) {
     arr[i] = this.elementData[i];
   }
   return arr;
   */
  }
}
